#!/bin/sh

cd /bin
busybox --list | busybox xargs -n1 busybox ln -ns "busybox" 2>/dev/null
cd /

# devtmpfs does not get automounted for initramfs
#mkdir -p /dev /proc /sys
mount -t devtmpfs devtmpfs /dev
exec 0</dev/console
exec 1>/dev/console
exec 2>/dev/console
mount -t proc proc /proc
mount -t sysfs sys /sys
mkdir -p /dev/pts /dev/shm
mount -o defaults,gid=5,mode=620 -t devpts devpts /dev/pts
mount -o mode=077 -t tmpfs tmpfs /dev/shm

keyfile="/key-file"
echo "cmdline: $(cat "/proc/cmdline")"

for i in $(cat "/proc/cmdline"); do
  if [ "$i" = "ro" ]; then
    READONLY="y"
  elif [ "${i#root=}" != "$i" ]; then
    ROOTFS="${i#root=}"
  elif [ "$i" = "decrypt" ]; then
    DECRYPT="y"
  elif [ "$i" = "sdboot" ]; then
    SD="y"
  elif [ "${i#waitfor=}" != "$i" ]; then
    WAITFOR="${i#waitfor=}"
  elif [ "${i#hakchi-key-file=base64:}" != "$i" ]; then
    echo "${i#hakchi-key-file=base64:}" | base64 -d >"$keyfile"
  fi
done

if [ ! -z "$WAITFOR" ]; then
  while true; do
    [ -b "$WAITFOR" ] && break
    usleep 100000
  done
elif grep -qEe 'hakchi-((clover)?shell|memboot)' /proc/cmdline; then
  usleep 500000
  if [ -b /dev/mmcblk0 ] && [ "$(head -c6 /dev/mmcblk0)" == "hakchi" ]; then
    SD="y"
  fi
fi

if [ "$SD" = "y" ] && [ "$(head -c6 /dev/mmcblk0)" == "hakchi" ]; then
  if [ ! -b /dev/mmcblk0p2 ]; then
    mkdir /squashtools
    losetup -o $((1024*40)) /dev/loop1 /dev/mmcblk0
    mount /dev/loop1 /squashtools
    mkdir /tmp
    cp /squashtools/init /tmp/init
    sh /tmp/init 2>&1 | tee /dev/tty0
    rm /tmp/init
    rmdir /tmp
  fi

  mkdir /firmware
  mount -t vfat -o ro /dev/mmcblk0p1 /firmware
  firmware="$(find /firmware -type f -name "*.hsqs" | sort | grep -vEe '/\._' | head -n1)"
  
  if [ -f "$firmware" ]; then
    losetup /dev/loop2 "$firmware" 
    ROOTFS="/dev/loop2"
    DECRYPT="n"
  else
    ROOTFS="/dev/nandb"
    DECRYPT="y"
    [ "$(hexdump -e '1/4 "%u"' -s 0 -n 4 "$ROOTFS")" == "1936814952" ] && DECRYPT="n"
  fi
fi

if [ "${DECRYPT}" = "y" ] && [ ! -f "$keyfile" ]; then
  kfb64="$(sunxi-flash cmdline | sed -ne 's/.*hakchi-key-file=base64:\([^ ]*\).*/\1/p')" && ! [ -z "$kfb64" ] && echo "$kfb64" | base64 -d >"$keyfile"
  unset kfb64
  [ -f "$keyfile" ] || sunxi-flash ramdisk 68 | cpio -iu "$(basename "$keyfile")" 2>/dev/null
  [ -f "$keyfile" ] || sunxi-flash ramdisk | cpio -iu "$(basename "$keyfile")" 2>/dev/null
fi

MOUNT_OPTS="noatime"
[ "${READONLY}" = "y" ] && MOUNT_OPTS="ro,${MOUNT_OPTS}"

if [ "${DECRYPT}" = "y" ]; then
  [ "${READONLY}" = "y" ] && READONLY="--readonly"
  [ -f "$keyfile" ] && cryptsetup open "${ROOTFS}" root-crypt "${READONLY}" --type plain --cipher aes-xts-plain --key-file "$keyfile"
  ROOTFS="/dev/mapper/root-crypt"
fi

mountpoint="/newroot"
mkdir -p "$mountpoint"
[ -b "${ROOTFS}" ] && mount -o "${MOUNT_OPTS}" "${ROOTFS}" "$mountpoint"

[ -f "/hakchi/init" ] && sh "/hakchi/init"

mount --move /dev "$mountpoint/dev"
mount --move /proc "$mountpoint/proc"
mount --move /sys "$mountpoint/sys"
exec switch_root "$mountpoint" /sbin/init
