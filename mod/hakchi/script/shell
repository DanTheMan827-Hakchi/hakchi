#!/bin/sh

f_clovershell(){
  local CONFIGFS="/sys/devices/virtual/android_usb/android0"
  setSysNode "$CONFIGFS/idVendor" "1f3a"
  setSysNode "$CONFIGFS/idProduct" "efe8"
  setSysNode "$CONFIGFS/functions" "clover"
  setSysNode "$CONFIGFS/enable" "1"
  env -i USER="root" \
         LOGNAME="root" \
         HOME="/root" \
         SHELL="/bin/sh" \
         PATH="$PATH" \
         TERM="linux" \
         ENV='$HOME/.shrc' \
  clovershell &
  echo "$!" > "/run/clovershell.pid"
}

f_shell(){
  for s in $(ls /etc/init.d/S*); do
    service "$(basename "$s")" start
  done
}

f_uartshell(){
  [ -d "$modpath/transfer" ] && cd "$modpath/transfer" || cd "$temppath"
  /bin/getty -ni 115200 ttyS0 -l /bin/sh &
  echo "$!" > "/run/uartshell.pid"
  cd - >/dev/null
}

runshell(){
  showDefaultImage
  if [ "$cf_usb_mode" = "host" ]; then
    switchToUsbHost
    timeout="" waittimeout 2000 'lsusb | grep -qFv "1d6b:"' "usbhost"
  else
    switchToUsbDevice
    usleep 200000
  fi

  mount_base_ro
  {
    rm -f "/lib32/modules" "/usr" "/sbin"
    for s in $(cat $rootfs/etc/bootcopy.d/* | sort -u); do
      copy "$rootfs$s" "$s" --ignore-existing
      copy "$squashfs$s" "$s" --ignore-existing
    done
    copy "$rootfs/lib/" "/lib32/" --ignore-existing
    copy "$squashfs/lib/" "/lib32/" --ignore-existing --exclude "modules/"
    copy "$squashfs/usr/lib/" "/usr/lib/" --ignore-existing
    copy "$squashfs/sbin/" "/sbin/" --ignore-existing
  } 2>/dev/null
  umount_base

  PATH="$modpath/shell:$PATH"

  copy "$modpath/rootfs/bin/" "/bin/"
  copy "$modpath/rootfs/etc/profile" "/root/.profile"
  sed -i "s#^$modname showBanner#source /root/.shrc#g" "/root/.profile"

  echo "
if [ -z \"\$cf_shell\" ]; then
  export PATH=\"$PATH\"
  export mountpoint=\"$mountpoint\"
  export modname=\"$modname\"
  export modpath=\"$modpath\"
  source \"$modpath/config\"
fi
  " > "/root/.shrc"

  ${1+"$@"}
  sleep 1
  f_uartshell

  tail -f "$modpath/init" 1>/dev/null &
  local pid="$!"
  echo "$pid" > "/run/shell.pid"
  wait "$pid"
  usleep 200000
  for s in $(ls -r /etc/init.d/S* | grep -Fv rndis); do
    service "$(basename "$s")" stop
  done
  ls /run/*.pid | xargs cat | xargs -rn1 kill
  echo "udevd udhcpc wpa_supplicant sntool sunxi-flash" | xargs -rn1 killall -q
  exit 0
}

[ "$cf_clovershell" = "y" ] && runshell f_clovershell
[ "$cf_shell" = "y" ] && runshell f_shell
